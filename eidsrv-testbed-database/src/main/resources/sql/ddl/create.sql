CREATE TABLE XML_SIGNATURE_ENTITY (ID VARCHAR NOT NULL, BIT_LENGTH LONGVARBINARY, CANONICALIZATION_METHOD VARCHAR, DIGEST_METHOD VARCHAR, SIGNATURE_ALGORITHM VARCHAR, XML_SIGNATURE_ALGORITHM_EID VARCHAR, XML_SIGNATURE_ALGORITHM_SAML VARCHAR, PRIMARY KEY (ID));
CREATE TABLE CERTIFICATE_CV (ID VARCHAR NOT NULL, CERTIFICATE_NAME VARCHAR, CVCERTIFICATE LONGVARBINARY, CV_CERTIFICATE VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TLS (ID VARCHAR NOT NULL, INTERFACE VARCHAR, VERSION VARCHAR, TLS_ECARDAPI_ATTACHED VARCHAR, TLS_ECARDAPI_PSK VARCHAR, TLS_EIDINTERFACE VARCHAR, TLS_SAML VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TESTBED_USER (ID VARCHAR NOT NULL, NAME VARCHAR, PWD_HASH VARCHAR, ROLE VARCHAR, PRIMARY KEY (ID));
CREATE TABLE REPORT (ID VARCHAR NOT NULL, REPORTDATA LONGVARBINARY, TYPE VARCHAR, Report VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TEST_CASE (ID VARCHAR NOT NULL, DTYPE VARCHAR(31), EID_CARD VARCHAR, CERTIFICATEBASENAMES LONGVARBINARY, DESCRIPTION VARCHAR, MANUAL_TEST_EXPLANATION VARCHAR, MODULE LONGVARBINARY, NAME VARCHAR UNIQUE, suffix VARCHAR, DEFAULT_TEST_CASE_ID VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TEST_RUN (ID VARCHAR NOT NULL, END_DATE TIMESTAMP, START_DATE TIMESTAMP, TEST_RUNS VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TOKEN (ID VARCHAR NOT NULL, LOGIN_DATE TIMESTAMP, TOKEN VARCHAR, TESTBED_USER VARCHAR, PRIMARY KEY (ID));
CREATE TABLE LOG_MESSAGES (ID VARCHAR NOT NULL, MESSAGE VARCHAR, TEST_STEP_NAME VARCHAR, SUCCESS BOOLEAN, LOG_MESSAGE VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TEST_CASE_STEPS (NAME VARCHAR NOT NULL, INBOUND BOOLEAN, ISDEFAULT BOOLEAN, MESSAGE VARCHAR, OPTIONAL BOOLEAN, SUFFIX VARCHAR, XSD VARCHAR, PRIMARY KEY (NAME));
CREATE TABLE TLS_CLIENT_CERTIFICATE (ID VARCHAR NOT NULL, CERTIFICATE_TYPE VARCHAR, SIGNATURE_ALGORITHM VARCHAR, PRIMARY KEY (ID));
CREATE TABLE TEST_CANDIDATE (ID VARCHAR NOT NULL, API_MAJOR INTEGER, API_MINOR INTEGER, API_SUBMINOR INTEGER, CANDIDATE_NAME VARCHAR, ECARD_API_URL VARCHAR, EIDINTERFACE_URL VARCHAR, PROFILE_NAME VARCHAR UNIQUE, SAML_PROCESSOR_URL VARCHAR, VENDOR VARCHAR, VERSION_MAJOR INTEGER, VERSION_MINOR INTEGER, VERSION_SUBMINOR INTEGER, PRIMARY KEY (ID));
CREATE TABLE CERTIFICATE_X509 (ID VARCHAR NOT NULL, CERTIFICATE_NAME VARCHAR, PRIVATEKEY LONGVARBINARY, PUBLICKEY LONGVARBINARY, X509CERTIFICATE LONGVARBINARY, X509_CERTIFICATE VARCHAR, PRIMARY KEY (ID));
CREATE TABLE LOG (ID VARCHAR NOT NULL, RUN_DATE TIMESTAMP, TEST_CASE VARCHAR, LOG VARCHAR, PRIMARY KEY (ID));
CREATE TABLE XML_ENCRYPTION_TRANSPORT (ID VARCHAR NOT NULL, BIT_LENGTH LONGVARBINARY, TRANSPORT_ALGORITHM VARCHAR, PRIMARY KEY (ID));
CREATE TABLE XML_ENCRYPTION_AGREEMENT (ID VARCHAR NOT NULL, AGREEMENT_ALGORITHM VARCHAR, BIT_LENGTH LONGVARBINARY, WRAPPING_ALGORITHM VARCHAR, PRIMARY KEY (ID));
CREATE TABLE XmlSignatureEntity_ELLIPTICCURVES (XmlSignatureEntity_ID VARCHAR, EC_CURVE VARCHAR);
CREATE TABLE TlsEntity_ELLIPTICCURVES (TlsEntity_ID VARCHAR, CURVE VARCHAR);
CREATE TABLE TlsEntity_SIGNATUREALGORITHMS (TlsEntity_ID VARCHAR, SIGNATURE_ALGORITHM VARCHAR);
CREATE TABLE TlsEntity_TLSCIPHERSUITES (TlsEntity_ID VARCHAR, CIPHERSUITE VARCHAR);
CREATE TABLE Tls_ClientCertificate (TLS_ID VARCHAR NOT NULL, CLIENT_CERTIFICATE_ID VARCHAR NOT NULL, PRIMARY KEY (TLS_ID, CLIENT_CERTIFICATE_ID));
CREATE TABLE USER_TESTPROFILES (USER_ID VARCHAR NOT NULL, TESTPROFILE_ID VARCHAR NOT NULL, PRIMARY KEY (USER_ID, TESTPROFILE_ID));
CREATE TABLE Testcase_Steps (STEP_NAME VARCHAR NOT NULL, TC_NAME VARCHAR NOT NULL, STEP_INDEX INTEGER NOT NULL, PRIMARY KEY (STEP_NAME, TC_NAME, STEP_INDEX));
CREATE TABLE TestCandidateEntity_CHIPAUTHENTICATIONALGORITHMS (TestCandidateEntity_ID VARCHAR, CHIP_AUTHENTICATION_ALGORITHM VARCHAR);
CREATE TABLE TestCandidateEntity_CHIPAUTHENTICATIONDOMAINPARAMETERS (TestCandidateEntity_ID VARCHAR, CHIP_AUTHENTICATION_DOMAINPARAMS VARCHAR);
CREATE TABLE TestCandidateEntity_MANDATORYPROFILES (TestCandidateEntity_ID VARCHAR, MANDATORY_PROFILE VARCHAR);
CREATE TABLE TestCandidateEntity_OPTIONALPROFILES (TestCandidateEntity_ID VARCHAR, OPTIONAL_PROFILE VARCHAR);
CREATE TABLE TestCandidateEntity_XMLENCRYPTIONALGORITHMS (TestCandidateEntity_ID VARCHAR, XML_CONTENT_ENCRYPTION_ALGORITHM VARCHAR);
CREATE TABLE Candidate_Testcase (CANDIDATE_ID VARCHAR NOT NULL, TESTCASE_ID VARCHAR NOT NULL, PRIMARY KEY (CANDIDATE_ID, TESTCASE_ID));
CREATE TABLE Candidate_KeyAgreement (CANDIDATE_ID VARCHAR NOT NULL, AGREEMENT_ID VARCHAR NOT NULL, PRIMARY KEY (CANDIDATE_ID, AGREEMENT_ID));
CREATE TABLE Candidate_KeyTransport (CANDIDATE_ID VARCHAR NOT NULL, TRANSPORT_ID VARCHAR NOT NULL, PRIMARY KEY (CANDIDATE_ID, TRANSPORT_ID));
CREATE TABLE BaseTestCaseEntity_MANDATORYPROFILES (BaseTestCaseEntity_ID VARCHAR, MANDATORY_PROFILES VARCHAR);
CREATE TABLE BaseTestCaseEntity_OPTIONALPROFILES (BaseTestCaseEntity_ID VARCHAR, OPTIONAL_PROFILES VARCHAR);
CREATE TABLE TESTCASE_STEP_INTERFACES (BaseTestCaseEntity_ID VARCHAR, TARGETS VARCHAR, NAME VARCHAR);
CREATE TABLE BaseTestCaseEntity_VARIABLES (BaseTestCaseEntity_ID VARCHAR, VARIABLE VARCHAR, VALUE VARCHAR);
CREATE TABLE XmlEncryptionKeyTransportEntity_ELLIPTICCURVES (XmlEncryptionKeyTransportEntity_ID VARCHAR, EC_CURVE VARCHAR);
CREATE TABLE XmlEncryptionKeyAgreementEntity_ELLIPTICCURVES (XmlEncryptionKeyAgreementEntity_ID VARCHAR, EC_CURVE VARCHAR);
ALTER TABLE XML_SIGNATURE_ENTITY ADD CONSTRAINT XML_SIGNATURE_ENTITY_XML_SIGNATURE_ALGORITHM_EID FOREIGN KEY (XML_SIGNATURE_ALGORITHM_EID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE XML_SIGNATURE_ENTITY ADD CONSTRAINT XML_SIGNATURE_ENTITY_XML_SIGNATURE_ALGORITHM_SAML FOREIGN KEY (XML_SIGNATURE_ALGORITHM_SAML) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE CERTIFICATE_CV ADD CONSTRAINT FK_CERTIFICATE_CV_CV_CERTIFICATE FOREIGN KEY (CV_CERTIFICATE) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TLS ADD CONSTRAINT FK_TLS_TLS_ECARDAPI_ATTACHED FOREIGN KEY (TLS_ECARDAPI_ATTACHED) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TLS ADD CONSTRAINT FK_TLS_TLS_SAML FOREIGN KEY (TLS_SAML) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TLS ADD CONSTRAINT FK_TLS_TLS_ECARDAPI_PSK FOREIGN KEY (TLS_ECARDAPI_PSK) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TLS ADD CONSTRAINT FK_TLS_TLS_EIDINTERFACE FOREIGN KEY (TLS_EIDINTERFACE) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE REPORT ADD CONSTRAINT FK_REPORT_Report FOREIGN KEY (Report) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TEST_CASE ADD CONSTRAINT FK_TEST_CASE_DEFAULT_TEST_CASE_ID FOREIGN KEY (DEFAULT_TEST_CASE_ID) REFERENCES TEST_CASE (NAME);
ALTER TABLE TEST_RUN ADD CONSTRAINT FK_TEST_RUN_TEST_RUNS FOREIGN KEY (TEST_RUNS) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TOKEN ADD CONSTRAINT FK_TOKEN_USER FOREIGN KEY (TESTBED_USER) REFERENCES TESTBED_USER (ID);
ALTER TABLE LOG_MESSAGES ADD CONSTRAINT FK_LOG_MESSAGES_LOG_MESSAGE FOREIGN KEY (LOG_MESSAGE) REFERENCES LOG (ID);
ALTER TABLE CERTIFICATE_X509 ADD CONSTRAINT FK_CERTIFICATE_X509_X509_CERTIFICATE FOREIGN KEY (X509_CERTIFICATE) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE LOG ADD CONSTRAINT FK_LOG_LOG FOREIGN KEY (LOG) REFERENCES TEST_RUN (ID);
ALTER TABLE XmlSignatureEntity_ELLIPTICCURVES ADD CONSTRAINT XmlSgnatureEntityELLIPTICCURVESXmlSgnatureEntityID FOREIGN KEY (XmlSignatureEntity_ID) REFERENCES XML_SIGNATURE_ENTITY (ID);
ALTER TABLE TlsEntity_ELLIPTICCURVES ADD CONSTRAINT FK_TlsEntity_ELLIPTICCURVES_TlsEntity_ID FOREIGN KEY (TlsEntity_ID) REFERENCES TLS (ID);
ALTER TABLE TlsEntity_SIGNATUREALGORITHMS ADD CONSTRAINT FK_TlsEntity_SIGNATUREALGORITHMS_TlsEntity_ID FOREIGN KEY (TlsEntity_ID) REFERENCES TLS (ID);
ALTER TABLE TlsEntity_TLSCIPHERSUITES ADD CONSTRAINT FK_TlsEntity_TLSCIPHERSUITES_TlsEntity_ID FOREIGN KEY (TlsEntity_ID) REFERENCES TLS (ID);
ALTER TABLE Tls_ClientCertificate ADD CONSTRAINT FK_Tls_ClientCertificate_TLS_ID FOREIGN KEY (TLS_ID) REFERENCES TLS (ID);
ALTER TABLE Tls_ClientCertificate ADD CONSTRAINT FK_Tls_ClientCertificate_CLIENT_CERTIFICATE_ID FOREIGN KEY (CLIENT_CERTIFICATE_ID) REFERENCES TLS_CLIENT_CERTIFICATE (ID);
ALTER TABLE USER_TESTPROFILES ADD CONSTRAINT FK_USER_TESTPROFILES_USER_ID FOREIGN KEY (USER_ID) REFERENCES TESTBED_USER (ID);
ALTER TABLE USER_TESTPROFILES ADD CONSTRAINT FK_USER_TESTPROFILES_TESTPROFILE_ID FOREIGN KEY (TESTPROFILE_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE Testcase_Steps ADD CONSTRAINT FK_Testcase_Steps_TC_NAME FOREIGN KEY (TC_NAME) REFERENCES TEST_CASE (NAME);
ALTER TABLE Testcase_Steps ADD CONSTRAINT FK_Testcase_Steps_STEP_NAME FOREIGN KEY (STEP_NAME) REFERENCES TEST_CASE_STEPS (NAME);
ALTER TABLE TestCandidateEntity_CHIPAUTHENTICATIONALGORITHMS ADD CONSTRAINT TstCnddtnttyCHPTHENTICATIONALGORITHMSTstCnddtnttyD FOREIGN KEY (TestCandidateEntity_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TestCandidateEntity_CHIPAUTHENTICATIONDOMAINPARAMETERS ADD CONSTRAINT TstCnddtnttyCHPTHNTCTNDMAINPARAMETERSTstCnddtnttyD FOREIGN KEY (TestCandidateEntity_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TestCandidateEntity_MANDATORYPROFILES ADD CONSTRAINT TstCnddteEntityMANDATORYPROFILESTstCnddateEntityID FOREIGN KEY (TestCandidateEntity_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TestCandidateEntity_OPTIONALPROFILES ADD CONSTRAINT TstCnddateEntityOPTIONALPROFILESTstCnddateEntityID FOREIGN KEY (TestCandidateEntity_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE TestCandidateEntity_XMLENCRYPTIONALGORITHMS ADD CONSTRAINT TstCnddtnttyXMLENCRYPTIONALGORITHMSTstCnddtntityID FOREIGN KEY (TestCandidateEntity_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE Candidate_Testcase ADD CONSTRAINT FK_Candidate_Testcase_TESTCASE_ID FOREIGN KEY (TESTCASE_ID) REFERENCES TEST_CASE (ID);
ALTER TABLE Candidate_Testcase ADD CONSTRAINT FK_Candidate_Testcase_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE Candidate_KeyAgreement ADD CONSTRAINT FK_Candidate_KeyAgreement_AGREEMENT_ID FOREIGN KEY (AGREEMENT_ID) REFERENCES XML_ENCRYPTION_AGREEMENT (ID);
ALTER TABLE Candidate_KeyAgreement ADD CONSTRAINT FK_Candidate_KeyAgreement_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE Candidate_KeyTransport ADD CONSTRAINT FK_Candidate_KeyTransport_CANDIDATE_ID FOREIGN KEY (CANDIDATE_ID) REFERENCES TEST_CANDIDATE (ID);
ALTER TABLE Candidate_KeyTransport ADD CONSTRAINT FK_Candidate_KeyTransport_TRANSPORT_ID FOREIGN KEY (TRANSPORT_ID) REFERENCES XML_ENCRYPTION_TRANSPORT (ID);
ALTER TABLE BaseTestCaseEntity_MANDATORYPROFILES ADD CONSTRAINT BsTstCaseEntityMANDATORYPROFILESBsTestCaseEntityID FOREIGN KEY (BaseTestCaseEntity_ID) REFERENCES TEST_CASE (ID);
ALTER TABLE BaseTestCaseEntity_OPTIONALPROFILES ADD CONSTRAINT BsTestCaseEntityOPTIONALPROFILESBsTestCaseEntityID FOREIGN KEY (BaseTestCaseEntity_ID) REFERENCES TEST_CASE (ID);
ALTER TABLE TESTCASE_STEP_INTERFACES ADD CONSTRAINT FK_TESTCASE_STEP_INTERFACES_BaseTestCaseEntity_ID FOREIGN KEY (BaseTestCaseEntity_ID) REFERENCES TEST_CASE (ID);
ALTER TABLE TESTCASE_STEP_INTERFACES ADD CONSTRAINT FK_TESTCASE_STEP_INTERFACES_NAME FOREIGN KEY (NAME) REFERENCES TEST_CASE_STEPS (NAME);
ALTER TABLE BaseTestCaseEntity_VARIABLES ADD CONSTRAINT BaseTestCaseEntity_VARIABLES_BaseTestCaseEntity_ID FOREIGN KEY (BaseTestCaseEntity_ID) REFERENCES TEST_CASE (ID);
ALTER TABLE XmlEncryptionKeyTransportEntity_ELLIPTICCURVES ADD CONSTRAINT XmlncryptnKyTrnsprtnttyLLPXmlncryptnKyTrnsprtnttyD FOREIGN KEY (XmlEncryptionKeyTransportEntity_ID) REFERENCES XML_ENCRYPTION_TRANSPORT (ID);
ALTER TABLE XmlEncryptionKeyAgreementEntity_ELLIPTICCURVES ADD CONSTRAINT XmlncryptnKygrmntnttyLLPTCCRXmlncryptnKygrmntnttyD FOREIGN KEY (XmlEncryptionKeyAgreementEntity_ID) REFERENCES XML_ENCRYPTION_AGREEMENT (ID);
